/**
*
* {{ properCase componentName }}
*
*/
import * as React from 'react';
{{#if wantReactQuery}}
import {
  useQuery,
  useQueryClient,
  QueryClient,
  QueryClientProviderProps,
} from '@tanstack/react-query';
{{/if}}
{{#if wantStyledComponents}}
import styled from 'styled-components/macro';
{{/if}}
{{#if wantTranslations}}
import { useTranslation } from 'react-i18next';
import { messages } from './messages';
{{/if}}

interface Props {}

export function {{ properCase componentName }}(props: Props) {
{{/if}}
  {{#if wantTranslations}}
  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  const { t, i18n } = useTranslation();
  {{/if}}
  {{#if wantReactQuery}}
  const { status, data, error, isFetching } = use{{ properCase componentName }}();
  {{/if}}

  return (
  {{#if wantStyledComponents}}
  <Div>
  {{else}}
  <div>
  {{/if}}
    {{#if wantTranslations}}
    {t('')}
    {/*  {t(...messages.someThing())}  */}
    {{/if}}
  {{#if wantStyledComponents}}
  </Div>
  {{else}}
  </div>
  {{/if}}
  );

};

function use{{ properCase componentName }}(prop) {
  return useQuery({
    queryKey: ["{{ lowerCase componentName }}", prop],
    queryFn: () => {},
    enabled: !!prop,
  })
}

{{#if wantStyledComponents}}
const Div = styled.div``;
{{/if}}
